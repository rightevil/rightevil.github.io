<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>tryhackme房间volatility 取证</title>
    <link href="/tryhackme%E6%88%BF%E9%97%B4volatility%20%E5%8F%96%E8%AF%81/"/>
    <url>/tryhackme%E6%88%BF%E9%97%B4volatility%20%E5%8F%96%E8%AF%81/</url>
    
    <content type="html"><![CDATA[<h1 id="题目-1"><a href="#题目-1" class="headerlink" title="题目 1"></a>题目 1</h1><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/d981f70b0a96644b8e338.png"><br>已知信息：由 abode 文档感染而来,还有一个 ip</p><ul><li>第一问和第二问<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/9d6cec469ce44083152b8.png"><br>就是求主机信息，根据前面的教程，我们用 windows.info 插件就可以</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump1.vmem windows.info<br></code></pre></td></tr></table></figure><blockquote><p>此处-f 指定镜像内存文件</p></blockquote><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/6f88bf187bdfe43fc9e5f.png"></p></blockquote><ul><li>第三问 <u><br>What process can be considered suspicious in Case 001?</u><br>哪个是可疑进程，用 windows.pslist 求出进程列表就行，如果没发现，就用 windows.psscan，可以看隐藏的进程</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump1.vmem windows.pslist<br></code></pre></td></tr></table></figure><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/8247d4d481636428691fb.png"><br>根据之前给的提示，就是这个 reader_sl.exe 进程，把这个的信息交上去即可</p></blockquote><ul><li>第 456 问<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/f6c9f21cc546bbae1434c.png"><br>就是求父进程信息，可疑进程 pid，父进程 pid，我们用 windows.pstree</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump1.vmem windows.pstree<br></code></pre></td></tr></table></figure><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/1c317d503bcf162f98fb3.png"></p></blockquote><ul><li>第七八问<blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/0b839dc4d4b38ec6bdd8c.png"><br>求 user-agent 以及一个银行也没有关系，这个时候就要查一个具体的进程内容了<br>这个时候，可以用 windows.memmap.Memmap 插件看内存信息，然后–dump 给保存下来</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump1.vmem -o /tmp/ windows.memmap.Memmap --pid 1640 --dump<br></code></pre></td></tr></table></figure><blockquote><p>-o 指定输出路径，–pid 指定进程 pid，–dump 保存进程信息<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/19fd7393ac32f675d98a3.png"><br>这是正常的输出<br>然后用 strings 命令打印输出</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">strings /tmp/*.dmp | grep -i user-agent<br></code></pre></td></tr></table></figure><blockquote><p>grep -i 忽略大小写<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/30ca5f8ebcb96c431b47e.png"></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">strings /tmp/*.dmp | grep -i chase<br></code></pre></td></tr></table></figure><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/663d31ed91db660eb3c19.png"><br>看到输出了和 chase 有关的网站，那就是有关了</p></blockquote><h1 id="题目-2"><a href="#题目-2" class="headerlink" title="题目 2"></a>题目 2</h1><p>题目内容是中了勒索病毒</p><ul><li>第一问<br>求可疑进程，用 windows.pslist 即可，然后就可以看见大名鼎鼎的@WanaDecryptor@<br>可以看出来和 wannacry 有关，pid 为 740</li></ul><ul><li>第 2345 问<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/f3961a062c95d11f65ebf.png"><br>父进程可以用 windows.pstree 求出来<br>完整路径可以用 windows.dlllist</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump2.raw windows.dlllist | grep @WanaDecryptor@.exe<br></code></pre></td></tr></table></figure><blockquote><p>此处也可以用–pid 指定进程，然后可以看见第一个出来的就是他的完整路径<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/904ac9588136018c151ab.png"><br>至于第 5 问，把可疑进程名字放到浏览器一搜就可以看见大名鼎鼎的 Wannacry 病毒</p></blockquote><ul><li>第 6 问<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/654189c4a023ad21740a0.png"><br>问 decryptor 加载了什么 dll 去创建 socket，之前可以知道 decryptor 就是 taskche.exe，pid 为 1940<br>先用 windows.dlllist 求出所有的 dll</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump2.raw windows.dlllist --pid 1940 | grep .dll<br></code></pre></td></tr></table></figure><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/8f04e5642bdf1d58bbbf2.png"><br>然后把所有信息复制下来去问 gpt，让他讲解这里面的 dll 都是什么功能<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/5792ece2faae0c83e681d.png"></p></blockquote><ul><li>第 7 问<br><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/7ffdc296bcca2c1db8119.png"><br>哪些互斥体(mutex)可以看出是恶意软件<br>想知道 mutex 是什么可以去问 gpt<br>这个时候我们就需要用到 windows.handles，这个插件可以列出一个进程的所有句柄<br>那么，句柄（handles）又是什么呢？</li></ul><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/ce4809f4968ba0365d65b.png">可以参考这个，学过操作系统的应该都可以明白</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vol.py -f ../dump/dump2.raw windows.handles --pid 1940<br></code></pre></td></tr></table></figure><p>现在来看看输出</p><blockquote><p><img src="https://c5cc8144.telegraph-image-1ba.pages.dev/file/1cefe6ad7f8b049e31e29.png"><br>现在不明白的都可以看到了，至于哪个是答案，可以从搜索引擎得到答案，搜索引擎很重要</p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">Wannacry mutant</span><br></code></pre></td></tr></table></figure><p>这样搜即可</p><ul><li>最后一问，这个我也不会，没搞明白，也是通过看提示 windows.filescan，这就是答案</li></ul><h1 id="推荐文章视频"><a href="#推荐文章视频" class="headerlink" title="推荐文章视频"></a>推荐文章视频</h1><p>大神做这个房间的时候的视频（youtube）：<a href="https://www.youtube.com/watch?v=2DZqg2rcYTk">volatility 视频</a><br>有关 Wannacry 的文章，在这里面可以找到有关哪个 mutant 和 dll 的讲解：<a href="https://www.mandiant.com/resources/blog/wannacry-malware-profile">WannaCry Malware Profile</a></p>]]></content>
    
    
    <categories>
      
      <category>tryhackme</category>
      
      <category>取证</category>
      
      <category>volatility</category>
      
    </categories>
    
    
    <tags>
      
      <tag>volatility</tag>
      
      <tag>tryhackme</tag>
      
      <tag>取证</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/hello-world/"/>
    <url>/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
